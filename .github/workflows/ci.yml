name: CI

on:
  pull_request:
  merge_group:

defaults:
  run:
    shell: bash

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Install NASM
        run: |
          sudo apt-get update
          sudo apt-get install nasm
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Clippy
        run: cargo xtask clippy
        env:
          RUSTFLAGS: -Dwarnings
  
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Check Formatting
        run: cargo fmt -- --check

  run:
    name: Run
    strategy:
      matrix:
        target: [x86_64, aarch64, riscv64]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install QEMU, NASM (ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install qemu-system-x86 qemu-system-arm qemu-system-misc nasm
      - name: Install QEMU, NASM (macos)
        if: matrix.os == 'macos-latest'
        run: |
          # enable once it works again
          # brew update
          brew install qemu nasm
      - name: Install QEMU, NASM (windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install qemu --version=2023.5.31 --checksum64=20d26b460ec045b2cad4bdc4af59713db3110ab95dd73821a590571e4fc1ce1b972e9647867c16e061d1f7381de362ac9c9bfc027f47cdcce8a186818b595ffb
          echo "C:\Program Files\qemu" >> $GITHUB_PATH
          choco install nasm
          echo "C:\Program Files\NASM" >> $GITHUB_PATH
      - uses: actions/checkout@v4
        with:
            lfs: true
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run VM (hello_world, dev)
        run: cargo xtask ci qemu --target ${{ matrix.target }}
      - name: Run VM (hello_world, release)
        run: cargo xtask ci qemu --target ${{ matrix.target }} --release
      - name: Run VM (hello_c, dev)
        if: matrix.target == 'x86_64'
        run: cargo xtask ci qemu --target ${{ matrix.target }} --image hello_c
      - name: Run VM (hello_c, release)
        if: matrix.target == 'x86_64'
        run: cargo xtask ci qemu --target ${{ matrix.target }} --image hello_c --release
